# [ doc = r"Register block" ] # [ repr ( C ) ] pub struct RegisterBlock { # [ doc = "0x00 - secret key word 0" ] pub key0 : KEY0 , # [ doc = "0x04 - secret key word 1" ] pub key1 : KEY1 , # [ doc = "0x08 - secret key word 2" ] pub key2 : KEY2 , # [ doc = "0x0c - secret key word 3" ] pub key3 : KEY3 , # [ doc = "0x10 - secret key word 4" ] pub key4 : KEY4 , # [ doc = "0x14 - secret key word 5" ] pub key5 : KEY5 , # [ doc = "0x18 - secret key word 6" ] pub key6 : KEY6 , # [ doc = "0x1c - secret key word 7" ] pub key7 : KEY7 , # [ doc = "0x20 - Configuration register for the HMAC block" ] pub config : CONFIG , # [ doc = "0x24 - Command register for the HMAC block" ] pub command : COMMAND , # [ doc = "0x28 - wipe the secret key using the written value. Wipe happens upon write." ] pub wipe : WIPE , # [ doc = "0x2c - digest word 0" ] pub digest0 : DIGEST0 , # [ doc = "0x30 - digest word 1" ] pub digest1 : DIGEST1 , # [ doc = "0x34 - digest word 2" ] pub digest2 : DIGEST2 , # [ doc = "0x38 - digest word 3" ] pub digest3 : DIGEST3 , # [ doc = "0x3c - digest word 4" ] pub digest4 : DIGEST4 , # [ doc = "0x40 - digest word 5" ] pub digest5 : DIGEST5 , # [ doc = "0x44 - digest word 6" ] pub digest6 : DIGEST6 , # [ doc = "0x48 - digest word 7" ] pub digest7 : DIGEST7 , # [ doc = "0x4c - Bits 32-63 of `SHA2_MSG_LENGTH`. Length of digested message, in bits" ] pub msg_length1 : MSG_LENGTH1 , # [ doc = "0x50 - Bits 0-31 of `SHA2_MSG_LENGTH`." ] pub msg_length0 : MSG_LENGTH0 , # [ doc = "0x54 - Error code" ] pub error_code : ERROR_CODE , # [ doc = "0x58 - SHA256 is done" ] pub ev_status : EV_STATUS , # [ doc = "0x5c - SHA256 is done" ] pub ev_pending : EV_PENDING , # [ doc = "0x60 - SHA256 is done" ] pub ev_enable : EV_ENABLE , # [ doc = "0x64 - FIFO status" ] pub fifo : FIFO , } # [ doc = "secret key word 0\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key0](key0) module" ] pub type KEY0 = crate :: Reg < u32 , _KEY0 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY0 ; # [ doc = "`read()` method returns [key0::R](key0::R) reader structure" ] impl crate :: Readable for KEY0 { } # [ doc = "`write(|w| ..)` method takes [key0::W](key0::W) writer structure" ] impl crate :: Writable for KEY0 { } # [ doc = "secret key word 0" ] pub mod key0 ; # [ doc = "secret key word 1\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key1](key1) module" ] pub type KEY1 = crate :: Reg < u32 , _KEY1 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY1 ; # [ doc = "`read()` method returns [key1::R](key1::R) reader structure" ] impl crate :: Readable for KEY1 { } # [ doc = "`write(|w| ..)` method takes [key1::W](key1::W) writer structure" ] impl crate :: Writable for KEY1 { } # [ doc = "secret key word 1" ] pub mod key1 ; # [ doc = "secret key word 2\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key2](key2) module" ] pub type KEY2 = crate :: Reg < u32 , _KEY2 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY2 ; # [ doc = "`read()` method returns [key2::R](key2::R) reader structure" ] impl crate :: Readable for KEY2 { } # [ doc = "`write(|w| ..)` method takes [key2::W](key2::W) writer structure" ] impl crate :: Writable for KEY2 { } # [ doc = "secret key word 2" ] pub mod key2 ; # [ doc = "secret key word 3\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key3](key3) module" ] pub type KEY3 = crate :: Reg < u32 , _KEY3 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY3 ; # [ doc = "`read()` method returns [key3::R](key3::R) reader structure" ] impl crate :: Readable for KEY3 { } # [ doc = "`write(|w| ..)` method takes [key3::W](key3::W) writer structure" ] impl crate :: Writable for KEY3 { } # [ doc = "secret key word 3" ] pub mod key3 ; # [ doc = "secret key word 4\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key4](key4) module" ] pub type KEY4 = crate :: Reg < u32 , _KEY4 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY4 ; # [ doc = "`read()` method returns [key4::R](key4::R) reader structure" ] impl crate :: Readable for KEY4 { } # [ doc = "`write(|w| ..)` method takes [key4::W](key4::W) writer structure" ] impl crate :: Writable for KEY4 { } # [ doc = "secret key word 4" ] pub mod key4 ; # [ doc = "secret key word 5\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key5](key5) module" ] pub type KEY5 = crate :: Reg < u32 , _KEY5 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY5 ; # [ doc = "`read()` method returns [key5::R](key5::R) reader structure" ] impl crate :: Readable for KEY5 { } # [ doc = "`write(|w| ..)` method takes [key5::W](key5::W) writer structure" ] impl crate :: Writable for KEY5 { } # [ doc = "secret key word 5" ] pub mod key5 ; # [ doc = "secret key word 6\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key6](key6) module" ] pub type KEY6 = crate :: Reg < u32 , _KEY6 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY6 ; # [ doc = "`read()` method returns [key6::R](key6::R) reader structure" ] impl crate :: Readable for KEY6 { } # [ doc = "`write(|w| ..)` method takes [key6::W](key6::W) writer structure" ] impl crate :: Writable for KEY6 { } # [ doc = "secret key word 6" ] pub mod key6 ; # [ doc = "secret key word 7\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [key7](key7) module" ] pub type KEY7 = crate :: Reg < u32 , _KEY7 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY7 ; # [ doc = "`read()` method returns [key7::R](key7::R) reader structure" ] impl crate :: Readable for KEY7 { } # [ doc = "`write(|w| ..)` method takes [key7::W](key7::W) writer structure" ] impl crate :: Writable for KEY7 { } # [ doc = "secret key word 7" ] pub mod key7 ; # [ doc = "Configuration register for the HMAC block\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [config](config) module" ] pub type CONFIG = crate :: Reg < u32 , _CONFIG > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _CONFIG ; # [ doc = "`read()` method returns [config::R](config::R) reader structure" ] impl crate :: Readable for CONFIG { } # [ doc = "`write(|w| ..)` method takes [config::W](config::W) writer structure" ] impl crate :: Writable for CONFIG { } # [ doc = "Configuration register for the HMAC block" ] pub mod config ; # [ doc = "Command register for the HMAC block\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [command](command) module" ] pub type COMMAND = crate :: Reg < u32 , _COMMAND > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _COMMAND ; # [ doc = "`read()` method returns [command::R](command::R) reader structure" ] impl crate :: Readable for COMMAND { } # [ doc = "`write(|w| ..)` method takes [command::W](command::W) writer structure" ] impl crate :: Writable for COMMAND { } # [ doc = "Command register for the HMAC block" ] pub mod command ; # [ doc = "wipe the secret key using the written value. Wipe happens upon write.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [wipe](wipe) module" ] pub type WIPE = crate :: Reg < u32 , _WIPE > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _WIPE ; # [ doc = "`read()` method returns [wipe::R](wipe::R) reader structure" ] impl crate :: Readable for WIPE { } # [ doc = "`write(|w| ..)` method takes [wipe::W](wipe::W) writer structure" ] impl crate :: Writable for WIPE { } # [ doc = "wipe the secret key using the written value. Wipe happens upon write." ] pub mod wipe ; # [ doc = "digest word 0\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest0](digest0) module" ] pub type DIGEST0 = crate :: Reg < u32 , _DIGEST0 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST0 ; # [ doc = "`read()` method returns [digest0::R](digest0::R) reader structure" ] impl crate :: Readable for DIGEST0 { } # [ doc = "`write(|w| ..)` method takes [digest0::W](digest0::W) writer structure" ] impl crate :: Writable for DIGEST0 { } # [ doc = "digest word 0" ] pub mod digest0 ; # [ doc = "digest word 1\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest1](digest1) module" ] pub type DIGEST1 = crate :: Reg < u32 , _DIGEST1 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST1 ; # [ doc = "`read()` method returns [digest1::R](digest1::R) reader structure" ] impl crate :: Readable for DIGEST1 { } # [ doc = "`write(|w| ..)` method takes [digest1::W](digest1::W) writer structure" ] impl crate :: Writable for DIGEST1 { } # [ doc = "digest word 1" ] pub mod digest1 ; # [ doc = "digest word 2\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest2](digest2) module" ] pub type DIGEST2 = crate :: Reg < u32 , _DIGEST2 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST2 ; # [ doc = "`read()` method returns [digest2::R](digest2::R) reader structure" ] impl crate :: Readable for DIGEST2 { } # [ doc = "`write(|w| ..)` method takes [digest2::W](digest2::W) writer structure" ] impl crate :: Writable for DIGEST2 { } # [ doc = "digest word 2" ] pub mod digest2 ; # [ doc = "digest word 3\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest3](digest3) module" ] pub type DIGEST3 = crate :: Reg < u32 , _DIGEST3 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST3 ; # [ doc = "`read()` method returns [digest3::R](digest3::R) reader structure" ] impl crate :: Readable for DIGEST3 { } # [ doc = "`write(|w| ..)` method takes [digest3::W](digest3::W) writer structure" ] impl crate :: Writable for DIGEST3 { } # [ doc = "digest word 3" ] pub mod digest3 ; # [ doc = "digest word 4\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest4](digest4) module" ] pub type DIGEST4 = crate :: Reg < u32 , _DIGEST4 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST4 ; # [ doc = "`read()` method returns [digest4::R](digest4::R) reader structure" ] impl crate :: Readable for DIGEST4 { } # [ doc = "`write(|w| ..)` method takes [digest4::W](digest4::W) writer structure" ] impl crate :: Writable for DIGEST4 { } # [ doc = "digest word 4" ] pub mod digest4 ; # [ doc = "digest word 5\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest5](digest5) module" ] pub type DIGEST5 = crate :: Reg < u32 , _DIGEST5 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST5 ; # [ doc = "`read()` method returns [digest5::R](digest5::R) reader structure" ] impl crate :: Readable for DIGEST5 { } # [ doc = "`write(|w| ..)` method takes [digest5::W](digest5::W) writer structure" ] impl crate :: Writable for DIGEST5 { } # [ doc = "digest word 5" ] pub mod digest5 ; # [ doc = "digest word 6\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest6](digest6) module" ] pub type DIGEST6 = crate :: Reg < u32 , _DIGEST6 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST6 ; # [ doc = "`read()` method returns [digest6::R](digest6::R) reader structure" ] impl crate :: Readable for DIGEST6 { } # [ doc = "`write(|w| ..)` method takes [digest6::W](digest6::W) writer structure" ] impl crate :: Writable for DIGEST6 { } # [ doc = "digest word 6" ] pub mod digest6 ; # [ doc = "digest word 7\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [digest7](digest7) module" ] pub type DIGEST7 = crate :: Reg < u32 , _DIGEST7 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _DIGEST7 ; # [ doc = "`read()` method returns [digest7::R](digest7::R) reader structure" ] impl crate :: Readable for DIGEST7 { } # [ doc = "`write(|w| ..)` method takes [digest7::W](digest7::W) writer structure" ] impl crate :: Writable for DIGEST7 { } # [ doc = "digest word 7" ] pub mod digest7 ; # [ doc = "Bits 32-63 of `SHA2_MSG_LENGTH`. Length of digested message, in bits\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [msg_length1](msg_length1) module" ] pub type MSG_LENGTH1 = crate :: Reg < u32 , _MSG_LENGTH1 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _MSG_LENGTH1 ; # [ doc = "`read()` method returns [msg_length1::R](msg_length1::R) reader structure" ] impl crate :: Readable for MSG_LENGTH1 { } # [ doc = "`write(|w| ..)` method takes [msg_length1::W](msg_length1::W) writer structure" ] impl crate :: Writable for MSG_LENGTH1 { } # [ doc = "Bits 32-63 of `SHA2_MSG_LENGTH`. Length of digested message, in bits" ] pub mod msg_length1 ; # [ doc = "Bits 0-31 of `SHA2_MSG_LENGTH`.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [msg_length0](msg_length0) module" ] pub type MSG_LENGTH0 = crate :: Reg < u32 , _MSG_LENGTH0 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _MSG_LENGTH0 ; # [ doc = "`read()` method returns [msg_length0::R](msg_length0::R) reader structure" ] impl crate :: Readable for MSG_LENGTH0 { } # [ doc = "`write(|w| ..)` method takes [msg_length0::W](msg_length0::W) writer structure" ] impl crate :: Writable for MSG_LENGTH0 { } # [ doc = "Bits 0-31 of `SHA2_MSG_LENGTH`." ] pub mod msg_length0 ; # [ doc = "Error code\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [error_code](error_code) module" ] pub type ERROR_CODE = crate :: Reg < u32 , _ERROR_CODE > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _ERROR_CODE ; # [ doc = "`read()` method returns [error_code::R](error_code::R) reader structure" ] impl crate :: Readable for ERROR_CODE { } # [ doc = "`write(|w| ..)` method takes [error_code::W](error_code::W) writer structure" ] impl crate :: Writable for ERROR_CODE { } # [ doc = "Error code" ] pub mod error_code ; # [ doc = "SHA256 is done\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [ev_status](ev_status) module" ] pub type EV_STATUS = crate :: Reg < u32 , _EV_STATUS > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _EV_STATUS ; # [ doc = "`read()` method returns [ev_status::R](ev_status::R) reader structure" ] impl crate :: Readable for EV_STATUS { } # [ doc = "`write(|w| ..)` method takes [ev_status::W](ev_status::W) writer structure" ] impl crate :: Writable for EV_STATUS { } # [ doc = "SHA256 is done" ] pub mod ev_status ; # [ doc = "SHA256 is done\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [ev_pending](ev_pending) module" ] pub type EV_PENDING = crate :: Reg < u32 , _EV_PENDING > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _EV_PENDING ; # [ doc = "`read()` method returns [ev_pending::R](ev_pending::R) reader structure" ] impl crate :: Readable for EV_PENDING { } # [ doc = "`write(|w| ..)` method takes [ev_pending::W](ev_pending::W) writer structure" ] impl crate :: Writable for EV_PENDING { } # [ doc = "SHA256 is done" ] pub mod ev_pending ; # [ doc = "SHA256 is done\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [ev_enable](ev_enable) module" ] pub type EV_ENABLE = crate :: Reg < u32 , _EV_ENABLE > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _EV_ENABLE ; # [ doc = "`read()` method returns [ev_enable::R](ev_enable::R) reader structure" ] impl crate :: Readable for EV_ENABLE { } # [ doc = "`write(|w| ..)` method takes [ev_enable::W](ev_enable::W) writer structure" ] impl crate :: Writable for EV_ENABLE { } # [ doc = "SHA256 is done" ] pub mod ev_enable ; # [ doc = "FIFO status\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [fifo](fifo) module" ] pub type FIFO = crate :: Reg < u32 , _FIFO > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _FIFO ; # [ doc = "`read()` method returns [fifo::R](fifo::R) reader structure" ] impl crate :: Readable for FIFO { } # [ doc = "`write(|w| ..)` method takes [fifo::W](fifo::W) writer structure" ] impl crate :: Writable for FIFO { } # [ doc = "FIFO status" ] pub mod fifo ;