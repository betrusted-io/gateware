# [ doc = r"Register block" ] # [ repr ( C ) ] pub struct RegisterBlock { # [ doc = "0x00 - " ] pub timer_latch : TIMER_LATCH , # [ doc = "0x04 - Bits 32-63 of `CPU_TIMER_TIME`." ] pub timer_time1 : TIMER_TIME1 , # [ doc = "0x08 - Bits 0-31 of `CPU_TIMER_TIME`." ] pub timer_time0 : TIMER_TIME0 , # [ doc = "0x0c - Bits 32-63 of `CPU_TIMER_TIME_CMP`." ] pub timer_time_cmp1 : TIMER_TIME_CMP1 , # [ doc = "0x10 - Bits 0-31 of `CPU_TIMER_TIME_CMP`." ] pub timer_time_cmp0 : TIMER_TIME_CMP0 , } # [ doc = "\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [timer_latch](timer_latch) module" ] pub type TIMER_LATCH = crate :: Reg < u32 , _TIMER_LATCH > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _TIMER_LATCH ; # [ doc = "`read()` method returns [timer_latch::R](timer_latch::R) reader structure" ] impl crate :: Readable for TIMER_LATCH { } # [ doc = "`write(|w| ..)` method takes [timer_latch::W](timer_latch::W) writer structure" ] impl crate :: Writable for TIMER_LATCH { } # [ doc = "" ] pub mod timer_latch ; # [ doc = "Bits 32-63 of `CPU_TIMER_TIME`.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [timer_time1](timer_time1) module" ] pub type TIMER_TIME1 = crate :: Reg < u32 , _TIMER_TIME1 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _TIMER_TIME1 ; # [ doc = "`read()` method returns [timer_time1::R](timer_time1::R) reader structure" ] impl crate :: Readable for TIMER_TIME1 { } # [ doc = "`write(|w| ..)` method takes [timer_time1::W](timer_time1::W) writer structure" ] impl crate :: Writable for TIMER_TIME1 { } # [ doc = "Bits 32-63 of `CPU_TIMER_TIME`." ] pub mod timer_time1 ; # [ doc = "Bits 0-31 of `CPU_TIMER_TIME`.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [timer_time0](timer_time0) module" ] pub type TIMER_TIME0 = crate :: Reg < u32 , _TIMER_TIME0 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _TIMER_TIME0 ; # [ doc = "`read()` method returns [timer_time0::R](timer_time0::R) reader structure" ] impl crate :: Readable for TIMER_TIME0 { } # [ doc = "`write(|w| ..)` method takes [timer_time0::W](timer_time0::W) writer structure" ] impl crate :: Writable for TIMER_TIME0 { } # [ doc = "Bits 0-31 of `CPU_TIMER_TIME`." ] pub mod timer_time0 ; # [ doc = "Bits 32-63 of `CPU_TIMER_TIME_CMP`.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [timer_time_cmp1](timer_time_cmp1) module" ] pub type TIMER_TIME_CMP1 = crate :: Reg < u32 , _TIMER_TIME_CMP1 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _TIMER_TIME_CMP1 ; # [ doc = "`read()` method returns [timer_time_cmp1::R](timer_time_cmp1::R) reader structure" ] impl crate :: Readable for TIMER_TIME_CMP1 { } # [ doc = "`write(|w| ..)` method takes [timer_time_cmp1::W](timer_time_cmp1::W) writer structure" ] impl crate :: Writable for TIMER_TIME_CMP1 { } # [ doc = "Bits 32-63 of `CPU_TIMER_TIME_CMP`." ] pub mod timer_time_cmp1 ; # [ doc = "Bits 0-31 of `CPU_TIMER_TIME_CMP`.\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about avaliable fields see [timer_time_cmp0](timer_time_cmp0) module" ] pub type TIMER_TIME_CMP0 = crate :: Reg < u32 , _TIMER_TIME_CMP0 > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _TIMER_TIME_CMP0 ; # [ doc = "`read()` method returns [timer_time_cmp0::R](timer_time_cmp0::R) reader structure" ] impl crate :: Readable for TIMER_TIME_CMP0 { } # [ doc = "`write(|w| ..)` method takes [timer_time_cmp0::W](timer_time_cmp0::W) writer structure" ] impl crate :: Writable for TIMER_TIME_CMP0 { } # [ doc = "Bits 0-31 of `CPU_TIMER_TIME_CMP`." ] pub mod timer_time_cmp0 ;