# [ doc = "Reader of register IDENTIFIER_MEM" ] pub type R = crate :: R < u32 , super :: IDENTIFIER_MEM > ; # [ doc = "Writer for register IDENTIFIER_MEM" ] pub type W = crate :: W < u32 , super :: IDENTIFIER_MEM > ; # [ doc = "Register IDENTIFIER_MEM `reset()`'s with value 0" ] impl crate :: ResetValue for super :: IDENTIFIER_MEM { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `identifier_mem`" ] pub type IDENTIFIER_MEM_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `identifier_mem`" ] pub struct IDENTIFIER_MEM_W < 'a > { w : & 'a mut W , } impl < 'a > IDENTIFIER_MEM_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! 0xff ) | ( ( value as u32 ) & 0xff ) ; self . w } } impl R { # [ doc = "Bits 0:7" ] # [ inline ( always ) ] pub fn identifier_mem ( & self ) -> IDENTIFIER_MEM_R { IDENTIFIER_MEM_R :: new ( ( self . bits & 0xff ) as u8 ) } } impl W { # [ doc = "Bits 0:7" ] # [ inline ( always ) ] pub fn identifier_mem ( & mut self ) -> IDENTIFIER_MEM_W { IDENTIFIER_MEM_W { w : self } } }